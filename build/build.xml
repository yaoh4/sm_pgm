<?xml version="1.0"?>

<project name="pgm" default="all" basedir="..">
<!-- ANT build.xml.
     Tag                                 Description
     clean                               Deletes all relevant dirs
     make_deployment_dirs                Creates all relevant deployment dirs
     compile                             Compiles the java source code
     build                               creates the web archive
     tomcat.deploy                       deploys pgm application to tomcat server and start the application
     tomcat.undeploy                     undeloys the pgm application
     test                                executes the JUNIT testcases
 -->

<tstamp>
   <format property="start.timestamp" pattern="dd-MMM-yy HH:mm:ss" />
</tstamp>
<echo message="Build started: ${start.timestamp}" />

 <!-- Defined Environment & property files -->

     <property environment="env"/>
     <property file="${basedir}/build/env.properties"/>
     <property file="${basedir}/build/build.properties"/>
     <property file="${basedir}/build/user.properties"/>

<!-- Define project deployment properties -->

    <property name="app.name"               value="pgm"/>
    <property name="package.root"           value="gov"/>

    <property name="app.war.dir"            value="${build.war.dir}/${app.name}"/>
    <property name="app.war.inf"            value="${app.war.dir}/WEB-INF"/>
    <property name="app.war.images"         value="${app.war.dir}/images"/>
    <property name="app.distribution.dir"   value="${distribution.dir}/${app.name}"/>
    <property name="app.name.war"           value="${app.name}.war"/>
    <property name="app.config.zip"         value="${app.name}AppConfig.zip"/>
    <property name="app.module"             value="${build.dir}/${app.name}.ear"/>
    <property name="pgm.properties.dir" value="${properties.dir}/${pgm.env}"/>
    
    

<!-- Define the project Classpath Settings -->
    <path id="project.classpath">
        <pathelement path="${classpath}"/>
        <fileset dir="${lib.dir}">
           <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.dir}" includes="tomcat/*.jar"/>
    </path>
    <property name="project.classpath" refid="project.classpath"/>

    <taskdef resource="org/apache/catalina/ant/catalina.tasks" classpathref="project.classpath" />

    <!-- Create deployment dirs make_deployment_dirs -->
    <target name="make_deployment_dirs" description="create deployment dirs" depends="clean">
        <mkdir dir="${java.classes.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
        <mkdir dir="${distribution.dir}"/>
        <mkdir dir="${app.distribution.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.war.dir}"/>
        <mkdir dir="${build.ear.dir}"/>
        <mkdir dir="${app.war.inf}"/>
        <mkdir dir="${app.war.images}"/>
        <mkdir dir="${conf.dir}/pgm"/>
        <mkdir dir="${public_html.dir}/Stylesheets"/>
    </target>

<!-- remove deployment dirs before deoplyment -->
<target name="clean" description="remove deployment dirs before deployemt">
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${java.classes.dir}" includes="**/*"/>
    </delete>
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${javadoc.dir}" includes="**/*"/>
    </delete>
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${distribution.dir}" includes="**/*"/>
    </delete>
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${build.war.dir}" includes="**/*"/>
    </delete>
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${build.ear.dir}" includes="**/*"/>
    </delete>
    <delete includeEmptyDirs="true" failonerror="false">
        <fileset dir="${conf.dir}/pgm" includes="**/*"/>
    </delete>
</target>


<!-- compile project source -->
<target name="compile" depends="make_deployment_dirs"
        description="compiles the java source files" >
    <javac debug="on"
        classpath="${project.classpath}"
        srcdir="${src.dir}"
        destdir="${java.classes.dir}" 
        nowarn="true" 
        includeantruntime="false">
    <compilerarg value="-Xlint:none" />
    <compilerarg value="-Xlint:-deprecation" />
    <compilerarg value="-XDignore.symbol.file" />
    </javac>
    <copy todir="${java.classes.dir}">
        <fileset dir="${src.dir}" excludes="**/*.java,**/*.svn"/>
    </copy>
</target>

<!--  copy various proerties files to required directories -->

<target name="copy_properties_files" depends="make_deployment_dirs"
                description="copies properties files to deployment folders" >
     <echo message="copying property files from : ${pgm.properties.dir}" />
     <!-- copy other properties to conf folder -->
    <copy todir="${conf.dir}/${app.name}">
        <fileset dir="${pgm.properties.dir}">
            <include name="*.*"/>
        </fileset>
    </copy>
     <copy todir="${java.classes.dir}">
         <fileset dir="${properties.dir}">
              <include name="*.*"/>
         </fileset>
          <fileset dir="${public_html.dir}" includes="template/*/*.*"/>
      </copy>
</target>
<!-- create javadoc from the java source files -->

<target name="javadoc" depends="make_deployment_dirs" >
    <javadoc classpath="${project.classpath}"
             destdir="${javadoc.dir}"
             sourcepath="${src.dir}"
             packagenames="${package.root}/*"/>
</target>
<!--  build the web archive -->
<target name="war" depends="compile,copy_properties_files" description="create war file">
        <copy todir="${app.war.dir}">
            <fileset dir="${public_html.dir}">
              <include name="**/*.*"/>
              <exclude name="template/*/*.*"/>
            </fileset>
        </copy>

        <war warfile="${app.distribution.dir}/${app.name.war}" webxml="${app.war.inf}/web.xml">
            <fileset dir="${app.war.dir}">
               <exclude name="**/web.xml"/>
            </fileset>
            <classes dir="${java.classes.dir}"/>
            <lib dir="${lib.dir}" >
                <exclude name="tomcat/*.jar"/>
                <exclude name="tomcat"/>
            </lib>
        </war>
</target>
<target name="tomcat.undeploy" >
  <undeploy url="${tomcat.url}" failOnError="false" username="${tomcat.user}" password="${tomcat.password}" path="/${app.name}"/>
</target>

<target name="tomcat.deploy" depends="tomcat.undeploy,war" >
  <deploy url="${tomcat.url}" username="${tomcat.user}" password="${tomcat.password}" path="/${app.name}" war="${basedir}/${app.distribution.dir}/${app.name.war}"/>
</target>

<target name="tomcat.start">
    <exec executable="cmd" dir="${tomcat.home}/bin" os="${os.name}">
        <arg value="/c"/>
        <arg value="startup.bat"/>
    </exec>
</target>

<target name="tomcat.stop">
    <exec executable="cmd" dir="${tomcat.home}/bin" os="${os.name}">
        <arg value="/c"/>
        <arg value="shutdown.bat"/>
    </exec>
</target>

<!--   run the junit test cases  -->
<target name="test" description="run JUNIT test">
    <delete includeEmptyDirs="true" failonerror="false">
         <fileset dir="${test.report.dir}" includes="**/*"/>
    </delete>
    <mkdir dir="${test.report.dir}"/>
    <junit printsummary="yes" haltonfailure="no" failureProperty="test.failure">
      <classpath refid="project.classpath" />
       <formatter type="plain"/>

      <batchtest fork="yes"  todir="${test.report.dir}">
        <fileset dir="${java.classes.dir}">
           <include name="**/*Test.class"/>
        </fileset>
       </batchtest>
    </junit>
    <fail message="test failed" if="test.failure" />
  </target>
<!-- run ALL targets -->
  <target name="all" depends="clean,make_deployment_dirs,copy_properties_files,compile,war,tomcat.undeploy,tomcat.deploy">
      <tstamp>
        <format property="end.timestamp" pattern="dd-MMM-yy HH:mm:ss" />
    </tstamp>
   <echo message="Build ended: ${end.timestamp}" />
  </target>
</project>
